#!/bin/bash
# set -x
# DONT put spaces between assigment = signs
## process command line arguments
if [ -z "$1" ]
then
echo "Syntax: $0 hostname [sid]"
exit 1
fi
if [ -z "$2" ]
then 
SID=0
else
SID="$2"
fi
##############################################
cd $(dirname ${0})
# generate unique timestamp	
TS=$(date +%s)
# Generate variable with sql command
read -r -d '' SQL <<'EOF'
SET ECHO OFF
SPOOL __REPORTFILE__
set pagesize 9999
set linesize 9999
set feedback off
select 
CAST(SYS_CONTEXT('USERENV','SERVER_HOST') as VARCHAR2(20)) as "HOST",
CAST(SYS_CONTEXT('USERENV','DB_NAME') as VARCHAR2(10)) as "SID",
table_name, b.owner, b.tablespace_name,sum( bytes)/1024/1024 "SIZEMB"
from DBA_segments a,DBA_tables b
where  table_name=segment_name
group by segment_name,b.owner, b.tablespace_name,table_name
order by tablespace_name, owner, sizemb desc;
SPOOL OFF
-- spool off will close the html file and close tags
SET ECHO ON
exit
EOF
####################################
HOST="$1"
REPORTFILET="/tmp/orcl_sql___SID_____TS__.txt"
SQLFILET="/tmp/orcl_sql___SID_____TS__.sql"
FINAL="/tmp/orcl_sql_report___TS__.txt"
FINAL="${FINAL/__TS__/$TS}"
SQL="${SQL/__DAYS__/$DAYS}"

FLIST=""

if [[ $SID = 0 ]]; then
echo "Collecting SIDs from host $HOST"
SOURCE=$(ssh -q -i identity/id_rsa -t oracle@$HOST "cat /etc/oratab | egrep -iv '^#|agent' | cut -s -d: -f1 | sort | tr '\r\n' ' '")
else
SOURCE="$SID"
fi


for w in ${SOURCE}; do 

REPORTFILE="${REPORTFILET/__SID__/$w}"
REPORTFILE="${REPORTFILE/__TS__/$TS}"
SQLFILE="${SQLFILET/__SID__/$w}"
SQLFILE="${SQLFILE/__TS__/$TS}"
TSQL="${SQL/__REPORTFILE__/$REPORTFILE}"
FLIST="${FLIST} ${REPORTFILE}"

# save sql to local sql file
echo "$TSQL" > "$SQLFILE"
# send sql file to remote server
scp -q -i identity/id_rsa "$SQLFILE" oracle@$HOST:"$SQLFILE"
# run the sql
echo "Scanning host $HOST SID $w"
ssh -q -i identity/id_rsa -t oracle@$HOST "export ORACLE_SID=$w;export ORAENV_ASK=NO;. oraenv;sqlplus '/ as sysdba' @$SQLFILE" 1> /dev/null
# get the results
scp -q -i identity/id_rsa oracle@$HOST:"$REPORTFILE" "$REPORTFILE"

#Cleanup?
done

cat ${FLIST} | perl -e 'while (<>) {$_=~s/[ \t]+$//g;print;}' > $FINAL
cat $FINAL
exit 0
