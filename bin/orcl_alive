#!/bin/bash
# set -x
# DONT put spaces between assigment = signs
## process command line arguments
if [ -z "$1" ]
then
echo "Syntax: $0 hostname [sid]"
echo "        $0 hostfile"
exit 1
fi
if [ -z "$2" ]
then 
SID=0
else
SID="$2"
fi
##############################################
cd $(dirname ${0})
source lib/orcl_lib
# generate unique timestamp
TS=$(date +%s)
####################################
FINAL="/tmp/orcl_sql_report___TS__.txt"
FINAL="${FINAL/__TS__/$TS}"
TFILE="/tmp/tmp___TS__.txt"
TFILE="${TFILE/__TS__/$TS}"
TFILE2="/tmp/tmp2___TS__.txt"
TFILE2="${TFILE2/__TS__/$TS}"
####################################

read -r -d '' SQL <<'EOF'
SET NEWPAGE 0
SET SPACE 0
SET LINESIZE 9999
SET PAGESIZE 0
SET ECHO OFF
SET FEEDBACK OFF
SET VERIFY OFF
SET HEADING OFF
SET MARKUP HTML OFF SPOOL OFF
select 
CAST(SYS_CONTEXT('USERENV','SERVER_HOST') as VARCHAR2(20)) as "HOST",
CAST(SYS_CONTEXT('USERENV','DB_NAME') as VARCHAR2(10)) as "SID",
TO_CHAR(SYSDATE, 'MM-DD-YYYY HH24:MI:SS') "SYSDATE" FROM DUAL;
exit
EOF

if [[ -f "${1}" ]]; then
HOSTLIST=$(collectHostsFromFile "$1")
else
HOSTLIST="$1"
fi

for HOST in ${HOSTLIST}; do
if [[ $SID = 0 ]]; then
SIDLIST=$(orcl_getsids $HOST)
else
SIDLIST="$SID"
fi


for w in ${SIDLIST}; do 
#cat sql/alive.sql | ssh -q -i identity/id_rsa -t oracle@$HOST "export ORACLE_SID=$w;export ORAENV_ASK=NO;. oraenv >/dev/null;sqlplus -S '/ as sysdba' " >  ${TFILE} 
printf "%s\n" "${SQL}" | ssh -q -i identity/id_rsa -t oracle@$HOST "export ORACLE_SID=$w;export ORAENV_ASK=NO;. oraenv >/dev/null;sqlplus -S '/ as sysdba' " >  ${TFILE} 


grep -q -i -e "^ORA-" "${TFILE}"
OK=$?
if [[ $OK -eq 0 ]]; then
echo "$HOST $w Failed" >> ${FINAL}
else
cat ${TFILE} >> ${FINAL}
fi
done

done

cp ${FINAL} ${TFILE2}
cat ${TFILE2} | perl -e 'while (<>) {$_=~s/[ \t]+$//g;print;}' > $FINAL
cat ${FINAL}
# cleanup
rm ${TFILE} ${TFILE2}
exit 0
##############################################
