#!/bin/bash
#set -x
####################################
# get script directory
SWD=$(dirname ${0})
###################################
# load support files
source "${SWD}/../config/orcl_config"
source "${SWD}/../lib/orcl_lib"
##############################################
# define usage function
usage()
{
cat << EOF
usage: $(basename $0) options
Author: Adam Richards
Email a file as html

OPTIONS:
-h        help
-a value  To address list
-s value  Subject
-f value  file to send
-t        preformatted text
-v        verbose
EOF
}

export MAILCMD="/usr/sbin/sendmail"
export MAILTO="adamrichards@elpasoco.com"
export SUBJECT="sendmail test"
export BODY="/tmp/email_body.html"
export ATTACH="/tmp/attachment.pdf"
(
 echo "To: $MAILTO"
 echo "Subject: $SUBJECT"
 echo "MIME-Version: 1.0"
 echo 'Content-Type: multipart/mixed; boundary="-q1w2e3r4t5"'
 echo
 echo '---q1w2e3r4t5'
 echo "Content-Type: text/html"
 echo "Content-Disposition: inline"
 cat $BODY
 echo '---q1w2e3r4t5'
 echo 'Content-Type: application; name="'$(basename $ATTACH)'"'
 echo "Content-Transfer-Encoding: base64"
 echo 'Content-Disposition: attachment; filename="'$(basename $ATTACH)'"'
 uuencode --base64 $ATTACH $(basename $ATTACH)
 echo '---q1w2e3r4t5--'
) | "${MAILCMD}" "${MAILTO}"


{
 	echo "From: user@domain.com"
        echo "To: adamrichards@elpasoco.com"
        echo "MIME-Version: 1.0"
        echo "Subject: image test"
        echo "Content-Type: multipart/mixed; boundary=\"FILEBOUNDARY\""
        echo
        echo "--FILEBOUNDARY"
        echo "Content-Type: multipart/alternative; boundary=\"MSGBOUNDARY\""
        echo

        echo "--MSGBOUNDARY"
        echo "Content-Type: text/html; charset=iso-8859-1"
        echo "Content-Disposition: inline"
        echo "<html><body>"
        echo "<font face=verdana size=2>Tick mark:- </font>"
        echo "<img src=\"cid:tickjpeg\" /><br>"
        echo "<font face=verdana size=2>Cross mark:- </font>"
        echo "<img src=\"cid:crossjpeg\" /><br>"
        echo "</body></html>"
        echo "--MSGBOUNDARY--"

        echo
        echo "--FILEBOUNDARY"
        echo "Content-Type: image/jpeg"
        echo "Content-Disposition: inline; filename=\"tick.jpg\""
        echo "Content-Transfer-Encoding: base64"
        echo "Content-Id: <tickjpeg>"
        echo
        base64 tick.jpg
        echo

        echo "--FILEBOUNDARY"
        echo "Content-Type: image/jpeg"
        echo "Content-Disposition: inline; filename=\"cross.jpg\""
        echo "Content-Transfer-Encoding: base64"
        echo "Content-Id: <crossjpeg>"
        echo
        base64 cross.jpg
        echo

        echo "--FILEBOUNDARY--"
} | /usr/lib/sendmail -t

####################################
# initialize argument variables
ADDRLIST=
INFILE=
SUBJECT=
V=
T=
####################################
# process command line arguments
# options with : after them expect an argument
while getopts “ha:s:f:vt” OPTION
do
     case $OPTION in
         h)
             usage
             exit 1
             ;;
         a)
             ADDRLIST=$OPTARG
             ;;
         f)
             INFILE=$OPTARG
             ;;
         s)
             SUBJECT=$OPTARG
             ;;
         v)
	     V=1
             ;;
         t)
	     T=1
             ;;
         ?)
             usage
             exit
             ;;
     esac
done
####################################
# validate arguments
if [[ -z $ADDRLIST ]] || [[ -z $SUBJECT ]] || [[ -z $INFILE ]]
then
     usage
     exit 1
fi

if [[ ! -f "${INFILE}" ]]; then
    printf "File not found: %s\n" "${INFILE}"
    exit 1
fi

####################################
assertIdentityFile
##############################################
HOST=oem01
FROMUSER=orclmon@oem01.epc.com
##############################################
if [[ $T = 1 ]]; then
TMPFILE=/tmp/mailfiletmp.${timestampstring}
printf "<pre>\n" > "${TMPFILE}"
cat "${INFILE}" >> "${TMPFILE}" 
printf "</pre>\n" >> "${TMPFILE}" 
INFILE="${TMPFILE}"
fi

cat <<EOF - "${INFILE}" | /usr/sbin/sendmail -t
To: ${ADDRLIST}
From: ${FROMUSER}
Subject: ${SUBJECT} 
Content-Type: text/html

EOF
##############################################
if [[ $T = 1 ]]; then
rm "${TMPFILE}"
fi
##############################################
exit 0
