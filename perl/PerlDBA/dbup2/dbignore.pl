#!/usr/bin/perl

use Date::Manip;
use Date::Format;
use File::Basename;
use PDBA::ConfigFile;
use warnings;
use Data::Dumper;

use Getopt::Long;

our %optctl=();

# passthrough allows additional command line options
# to be passed to PDBA::OPT if needed
Getopt::Long::Configure(qw{pass_through});

GetOptions( \%optctl,
	"conf=s",
	"database=s",
	"until_date=s",
	"debug!",
	"mail!",
	"daemon!",
	"h|z|help" 
);

my $DEBUG = $optctl{debug} ? 1 : 0;

usage(1) if ( $optctl{h} or $optctl{z} or $optctl{help});

unless ( exists $optctl{database} ) { usage(1) }
unless ( exists $optctl{until_date} ) { usage(1) }

my $confFile = $optctl{conf} ? $optctl{conf} : PDBA->pdbaHome . '/dbignore.conf';

my $newFile = undef;

unless ( -e $confFile  ) { $newFile = 1 }

my ($file,$path) = fileparse($confFile);

print "path: $path \n" if $DEBUG;
print "file: $file \n" if $DEBUG;

# open and run the control file
unless ( $newFile ) {
	my $fh=undef;
	unless ( 
		$fh = new PDBA::ConfigLoad( 
			FILE => $file,
			PATH => $path,
		) 
	) {
		die "\n\nCannot open config file $confFile\n";
	}


	print  Dumper(\%dbignore::ignoreUntil) if $DEBUG;

}

my $rawDate  = ParseDate($optctl{until_date});

unless ( $rawDate ) {
	die "invalid date for  -until_date\n";
}
	
my $untilDate = UnixDate($rawDate,'%Y/%m/%d-%H:%M:%S');

$dbignore::ignoreUntil{$optctl{database}} = $untilDate;

print "Not checking connectivity for $optctl{database} until $untilDate\n";

open(IGNORE, ">$confFile") || die "cannot write file $confFile - $!\n";
print IGNORE qq{\n# !! Generated by dbignore.pl\n\n};
print IGNORE qq{\npackage dbignore;\n\n};
print IGNORE qq{# Date format "%Y/%m/%d-%H:%M:%S"\n\n};
print IGNORE qq{use vars qw( %ignoreUntil );\n\n};
print IGNORE qq{%ignoreUntil = (\n};

for my $key ( sort keys %dbignore::ignoreUntil ) {
	print IGNORE qq{\t$key => "$dbignore::ignoreUntil{$key}",\n};
}

print IGNORE qq{);\n};
print IGNORE qq{1;\n};


sub usage {

	my ( $exitArg ) = @_;

	print q/

  dbignore.pl - do not check database connectivity
                for a specific database

  -conf        full path to configuration file
               file will be created in $PDBA_HOME if not found
  -database    which database to ignore
  -debug       turns debuggin on - off by default
  -until_date  date to ignore database until
  -h           print usage and exit
  -z           print usage and exit
  -help        print usage and exit

/;

	exit $exitArg if $exitArg;

};


