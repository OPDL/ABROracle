
package cuconf;

use vars qw{ %roles %tablespaces };


=head1 create_user.conf

configuration file for create user script cu.pl

=cut

=item B<%roles>

=over 4

template for %roles:


  %roles = (
    grant  => [],
    revokes => [],
    quotas => {},
  )

might look like this for a developer:

   developer =>  {

      grants => [ qw{
         connect
         resource
         plustrace
         javauserpriv
         javadebugpriv
         select_catalog_role
      }],

      revokes => [
         'unlimited tablespace'
      ],

      tablespaces => {
         default => 'tools',
         temporary => 'temp',
      },
      quotas => {
         users => 'unlimited',
         indx => '5m',
      },
   },

=back

=cut

# these refer to existing roles in the database
%roles = (

	connect =>  {
		grants => [ qw{
			connect
			resource
		}],
		revokes => [
			'unlimited tablespace'
		],
		quotas => {
			users => 'unlimited',
		},
	},

	developer =>  {
		grants => [ qw{
			connect
			resource
			plustrace
			javauserpriv
			javadebugpriv
			select_catalog_role
		}],
		revokes => [
			'unlimited tablespace'
		],
		quotas => {
			users => 'unlimited',
			indx => '5m',
		},
	},

	app_clerk => {
		grants => [
			'create session',
			'hr_clerk'
		],
		revokes => [],
		quotas => {},
	},

	app_admin => {
		grants => [
			'create session',
			'hr_admin',
		],
		revokes => [],
		quotas => {},
	},

	backup => {
		grants => [qw{
			connect
			exp_full_database
			imp_full_database
		}],
		revokes => [],
		quotas => {},
	},

	dba => {
		grants => [
			qw{connect dba}
		],
		revokes => [
		],
		tablespaces => {
			default => 'tools',
			temporary => 'temp2',
		},
		quotas => {},
	},

	sysdba => {
		grants => [
			qw{connect dba sysdba}
		],
		revokes => [],
		quotas => {},
	},

);

%tablespaces = (

	default  => 'users',
	temporary => 'temp',

);


