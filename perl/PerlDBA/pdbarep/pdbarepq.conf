
=head1 pdbarepq.conf

configuration file for spdrvr.pl sqlplus driver

contains SQL and SQL*Plus commands piped to SQL*Plus
for reporting on the PDBA Repository

you don't have to edit any of this if you don't wish to.

one thing you might like to alter though is the type of 
calendar you are using.

The formats are as follows:

  European        DD/MM/YYYY HH24:MI:SS
  International   YYYY/MM/DD HH24:MI:SS
  American        MM/DD/YYYY HH24:MI:SS

To current setting is 'International'.  To change the setting, 
simply uncomment the preferred version of the $calendar
below.

If you want the dates to appear in some other format, just
add another rung to the 'if/else' ladder below.

=cut

package pdbarepq;

use vars qw( %reports );

my ($calendar, $nlsDateFormat, $startDate, $endDate ) = (undef,undef,undef,undef);

# uncomment the appropriate line for your preferred date format
#
$calendar = 'International';   # YYYY/MM/DD HH24:MI:SS
#$calendar = 'American';        # MM/DD/YYYY HH24:MI:SS
#$calendar = 'European';        # DD/MM/YYYY HH24:MI:SS

if ( $calendar eq 'European' ) {
	$nlsDateFormat = q{dd/mm/yyyy hh24:mi:ss};
	$startDate = q{01/01/1700};
	$endDate = q{31/12/4000};
} elsif ( $calendar eq 'International' ) {
	$nlsDateFormat = q{yyyy/mm/dd hh24:mi:ss};
	$startDate = q{1700/01/01};
	$endDate = q{4000/12/31};
} elsif ( $calendar eq 'American' ) {
	$nlsDateFormat = q{mm/dd/yyyy hh24:mi:ss};
	$startDate = q{01/01/1700};
	$endDate = q{12/31/4000};
} else {
	$nlsDateFormat = q{yyyy/mm/dd hh24:mi:ss};
	$startDate = q{1700/01/01};
	$endDate = q{4000/12/31};
}

sub nlsDateFormat {
	my $self = shift;
	return $nlsDateFormat;
}

sub startDate {
	my $self = shift;
	return $startDate;
}

sub endDate {
	my $self = shift;
	return $endDate;
}

my $nlsDate = qq{
	set term off feed off
	alter session set nls_date_format = '$nlsDateFormat';
	set term on feed on
};

my $sysdate = q{
	col csysdate noprint new_value usysdate
	set term off feed off
	select sysdate csysdate from dual;
	set term on feed on
};

=over 4

=item B<$columnFormat>

scalar containing SQL*Plus column commands

e.g.

  my $columnFormat = q{
    col blocks format 999,999,999 head 'BLOCKS'
    col cinstance noprint new_value uinstance
    ...
  };

=back

=cut






my $columnFormat = q{
	col account_status format a15 head 'ACCT STATUS'
	col blocks format 999,999,999 head 'BLOCKS'
	col cinstance noprint new_value uinstance
	col column_id format 999 head 'COL|ID'
	col column_length format 999999 head 'COL|LENGTH'
	col column_name format a20 head 'COLUMN'
	col column_position format 999 head 'COL|POS'
	col data_length format 99999 head 'DATA|LENGTH'
	col data_precision format 999999 head 'DATA|PRECISION'
	col data_scale format 99999 head 'DATA|SCALE'
	col data_type format a10
	col default_tablespace format a15 head 'DEFAULT TBS'
	col expiry_date format a12 head 'EXPIRE DATE'
	col grantee format a15 head 'GRANTEE'
	col grantor format a15 head 'GRANTOR'
	col index_name format a30 head 'INDEX NAME'
	col index_owner format a15 
	col initial_extent format a15 head 'INITIAL|EXTENT|MEG'
	col isadjusted format a1 head 'A|D|J'
	col isdefault format a1 head 'D|E|F'
	col ismodified format a1 head 'M|O|D'
	col isses_modifiable format a1 head 'S|E|S|M|O|D'
	col issys_modifiable format a1 head 'S|Y|S|M|O|D'
	col leaf_blocks format 999,999,999 head 'LEAF|BLOCKS'
	col limit format a10 head 'LIMIT'
	col lock_date format a10 head 'LOCK DATE'
	col max_extents format 999999.99EEEE head 'MAX EXTENTS'
	col max_value format 99.99EEEE head 'MAX VALUE'
	col min_extents format 999,999,999 head 'MIN EXTENTS'
	col min_extlen format 999,999,999 head 'MIN|EXTENT|LENGTH'
	col min_value format 999,999,999,999 head 'MIN VALUE'
	col next_extent format a15 head 'NEXT|EXTENT|MEG'
	col nullable format a4 head 'NULL'
	col num_rows format 99,999,999,999 head 'NUMBER|OF ROWS'
	col owner format a15 head 'OWNER'
	col parm_description format a40 head 'DESCRIPTION'
	col parm_name format a20 head 'PARAMETER'
	col parm_value format a30 head 'VALUE'
	col password format a30 head 'PASSWORD'
	col password_required format a3 head 'PWD|REQ'
	col pct_increase format 999 head 'PCT|INC'
	col privtype format a10 head 'PRIV TYPE'
	col privname format a10 head 'PRIV NAME'
	col privilege format a10 head 'PRIVILEGE'
	col profile format a15 head 'PROFILE NAME'
	col resource_name format a32 head 'RESOURCE NAME'
	col resource_type format a15 head 'RESOURCE TYPE'
	col role format a30 head 'ROLE'
	col sequence_name format a15 head 'NAME'
	col sequence_owner format a15 head 'OWNER'
	col snap_date format a20 head 'SNAPSHOT DATE'
	col table_name format a20 head 'TABLE NAME'
	col table_owner format a15 
	col tablespace_contents format a9 head 'CONTENTS'
	col tablespace_logging format a9 head 'LOGGING'
	col tablespace_name format a30 head 'TABLESPACE'
	col tablespace_status format a9 head 'STATUS'
	col temporary_tablespace format a15 head 'TEMP TBS'
	col username format a30 head 'USERNAME'
	col username_created format a12 head 'CREATE DATE'
	col user_id format 999999 head 'USER ID'

};

my $setoff = q{
};

=over 4

=item B<%reports>

The %reports hash contains the SQL*Plus scripts used by the
spdrvr.pl script.  There is a twist to using this though.

Tags of the form <<TAGNAME>> are used in the SQL WHERE clause
and are parsed by the spdrvr.pl script.  The modified SQL is
then executed via SQL*Plus.

Each script also has a description that is used to list the
reports via the -report_list switch of spdrvr.pl.

Here's an example of %reports:

%reports => {

  table_rpt => {

    description => qq {
      table_rpt :
      report on tables in repository
      may be limited by the following tags:
     
      <<GLOBAL_NAME>>   -rep_database
      <<OWNER>>         -rep_schema
      <<TABLE_NAME>>    -rep_table_name
  },

    script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

      set linesize 100
      set pagesize <<PAGESIZE>>
      break on cinstance skip page on owner skip 1 on table_name skip 1
      ttitle 'PDBAREP Table report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2
		set tab off

      select 
        s.global_name cinstance
        , t.owner
        , t.table_name
        , s.snap_date
        , t.blocks
        , t.num_rows
      from pdba_snap_dates s, pdba_tables t
      where s.global_name like '<<GLOBAL_NAME>>'
      and t.owner like '<<OWNER>>'
      and t.table_name like '<<TABLE_NAME>>'
		-- here is how to get a range of dates
		and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
      and s.pk = t.snap_date_pk
      order by global_name, owner, table_name, snap_date;

    }
  },

  ...,

};

The description section should list the tags contained in the SQL 
and the command line options that may be used to limit them.

The following line is required in the i<script =<gt>'> section:

  script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

The login tags must appear on the very first line of the scalar 
variable script.  If not there, sqlplus will exit with an error
that it has not received a valid username.  This is because
sqlplus will allow you to pipe the connection info to sqlplus, 
but if it's not on the first line of input, it will fail.

If you add new tags you will need to modify spdrvrl.pl as well.
Instructions for doing so can be viewed via I<perldoc spdrvr.pl>

=back

=cut


%reports = (

	table_rpt => {
	
		description => qq { 
         table_rpt : 
           report on tables in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>   -rep_database
           <<OWNER>>         -rep_schema
           <<TABLE_NAME>>    -rep_table_name
			
		},
		
		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate

			$columnFormat

			clear breaks
			set linesize 100
      	set pagesize <<PAGESIZE>>
			break on cinstance skip page on owner skip 1 on table_name skip 1

			ttitle 'PDBAREP Table report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			set feed on term on
			set tab off

			select 
				s.global_name cinstance
				, t.owner
				, t.table_name
				, s.snap_date
				, t.blocks
				, t.num_rows
			from pdba_snap_dates s, pdba_tables t
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.owner like '<<OWNER>>'
			and t.table_name like '<<TABLE_NAME>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = t.snap_date_pk
			order by global_name, owner, table_name, snap_date;

		}

	},

	index_rpt => {
	
		description => qq { 
         index_rpt : 
           report on indexes in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>   -rep_database
           <<OWNER>>         -rep_schema
           <<TABLE_NAME>>    -rep_table_name
           <<INDEX_NAME>>    -rep_index_name
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate	

			clear breaks
			set linesize 135
      	set pagesize <<PAGESIZE>>
			break on cinstance skip page on owner skip 1 on table_name skip 1 on index_name

			$columnFormat

			ttitle 'PDBAREP Index report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			set feed on term on
			set tab off

			select 
				s.global_name cinstance
				, t.owner
				, t.table_name
				, t.index_name
				, s.snap_date
				, t.leaf_blocks
				, t.num_rows
			from pdba_snap_dates s, pdba_indexes t
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.owner like '<<OWNER>>'
			and t.table_name like '<<TABLE_NAME>>'
			and t.index_name like '<<INDEX_NAME>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = t.snap_date_pk
			order by global_name, owner, table_name, index_name, snap_date;

		}

	},

	column_rpt => {
	
		description => qq { 
         column_rpt : 
           report on table columns in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>   -rep_database
           <<OWNER>>         -rep_schema
           <<TABLE_NAME>>    -rep_table_name
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate	

			clear breaks
			set linesize 135
      	set pagesize <<PAGESIZE>>
			break on cinstance skip page on owner skip 1 on table_name skip 1 on column_name skip 1

			$columnFormat

			ttitle 'PDBAREP Column report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			set feed on term on
			set tab off

         select
				s.global_name cinstance
				, t.owner
				, t.table_name
				, t.column_name
				, s.snap_date
				, t.column_id
				, t.data_type
				, t.data_length
				, t.data_precision
				, t.data_scale
				, t.nullable
         from pdba_snap_dates s, pdba_tab_columns t
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.owner like '<<OWNER>>'
			and t.table_name like '<<TABLE_NAME>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
         and s.pk = t.snap_date_pk
         order by global_name, owner, table_name, column_name, snap_date;

		}

	},

	index_column_rpt => {
	
		description => qq { 
         index_column_rpt : 
           report on indexed columns in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>   -rep_database
           <<TABLE_OWNER>>   -rep_table_owner
           <<TABLE_NAME>>    -rep_table_name
           <<INDEX_NAME>>    -rep_index_name
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate	

			clear breaks
			set linesize 155
      	set pagesize <<PAGESIZE>>
			break on cinstance skip page on table_owner skip 1 on table_name skip 1 on index_name skip 1 on column_name skip 1

			$columnFormat

			ttitle 'PDBAREP Index Column report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			set feed on term on
			set tab off

         select
            s.global_name cinstance
            , t.table_owner
            , t.table_name
            , t.index_name
            , t.index_owner
            , s.snap_date
            , t.column_name
				, t.column_position
				, t.column_length
         from pdba_snap_dates s, pdba_ind_columns t
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.table_owner like '<<OWNER>>'
			and t.table_name like '<<TABLE_NAME>>'
			and t.index_name like '<<INDEX_NAME>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
         and s.pk = t.snap_date_pk
         order by global_name, table_owner, table_name, index_name, column_name, snap_date;

		}

	},

	profile_rpt => {
	
		description => qq { 
         profile_rpt : 
           report on profiles in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>    -rep_database
           <<PROFILE>>        -rep_profile
           <<RESOURCE_TYPE>>  -rep_resource_type
           <<RESOURCE_NAME>>  -rep_resource_name
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate

			$columnFormat

			clear breaks
			set linesize 100
      	set pagesize <<PAGESIZE>>
			break on cinstance skip page on profile skip 1 on resource_type skip 1 on resource_name skip 1

			ttitle 'PDBAREP Profile report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			set feed on term on
			set tab off
			select 
				s.global_name cinstance
				, p.profile
				, p.resource_type
				, p.resource_name
				, s.snap_date
				, p.limit
			from pdba_profiles p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
  			and p.profile like '<<PROFILE>>'
  			and p.resource_type like '<<RESOURCE_TYPE>>'
  			and p.resource_name like '<<RESOURCE_NAME>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and p.snap_date_pk = s.pk
			order by global_name, profile, resource_type, resource_name;

		}

	},

	role_rpt => {
	
		description => qq { 
         role_rpt : 
           report on database roles in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>    -rep_database
           <<ROLE>>           -rep_role
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate

			$columnFormat

			clear breaks
			set linesize 100
      	set pagesize <<PAGESIZE>>

			break on cinstance skip page on role skip 1 

			ttitle 'PDBAREP Role report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			set tab off

			select
				s.global_name cinstance
				, r.role
				, s.snap_date
				, nvl(r.password_required,'NO') password_required
			from pdba_roles r, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
  			and r.role like '<<ROLE>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = r.snap_date_pk
			order by global_name, role;
		}

	},

	master_priv_rpt => {
	
		description => qq { 
         master_priv_rpt : 
           report on database privileges granted in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>    -rep_database
           <<GRANTEE>>        -rep_grantee
           <<PRIVILEGE>>      -rep_privilege
           <<OBJECT_OWNER>>   -rep_object_owner
           <<OBJECT_NAME>>    -rep_object_name
           <<GRANTED_ROLE>>   -rep_granted_role
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate

			$columnFormat

			-- column overrides
			col table_name format a30 head 'OBJECT NAME'
			col owner format a15 head 'OBJ OWNER'

			clear breaks
			set linesize 120
      	set pagesize <<PAGESIZE>>
			set tab off

			ttitle 'PDBAREP Master Privilege report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			break on cinstance skip page -
				on grantee skip 1 -
				on privtype skip 1 -
				on privname skip 1 -
				on owner skip 1 -
				on table_name skip 1

			select
				s.global_name cinstance
				, r.grantee
				, 'ROLE' privtype
				, r.granted_role privname
				, null owner
				, null table_name
				, s.snap_date
			from pdba_role_privs r, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and r.grantee like '<<GRANTEE>>'
			and r.granted_role like '<<GRANTED_ROLE>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = r.snap_date_pk
			union
			select
				s.global_name cinstance
				, p.grantee
				, 'SYSPRIV' privtype
				, p.privilege privname
				, null owner
				, null table_name
				, s.snap_date
			from pdba_sys_privs p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and p.grantee like '<<GRANTEE>>'
			and p.privilege like '<<PRIVILEGE>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = p.snap_date_pk
			union
			select
				s.global_name cinstance
				, t.grantee
				, 'TABPRIV' privtype
				, t.privilege privname
				, t.owner
				, t.table_name
				, s.snap_date
			from pdba_tab_privs t, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.grantee like '<<GRANTEE>>'
			and t.owner like '<<OBJECT_OWNER>>'
			and t.privilege like '<<PRIVILEGE>>'
			and t.table_name like '<<OBJECT_NAME>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = t.snap_date_pk
			order by 1, 2, 3, 4, 5, 6;

		}

	},

	role_privs_rpt => {
	
		description => qq { 
         role_privs_rpt : 
           report on role privileges in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>    -rep_database
           <<GRANTEE>>        -rep_grantee
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate
			$columnFormat

			clear breaks
			set linesize 100
      	set pagesize <<PAGESIZE>>
			set tab off

			ttitle 'PDBAREP Role Privileges report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			break on cinstance skip page -
				on grantee skip 1 -
				on granted_role skip 1

			select 
				s.global_name cinstance
				, p.grantee
				, p.granted_role
				, p.admin_option
				, p.default_role
				, s.snap_date
			from pdba_role_privs p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and p.grantee like '<<GRANTEE>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = p.snap_date_pk
			order by global_name, grantee, granted_role, snap_date;

		}

	},

	table_privs_rpt => {
	
		description => qq { 
         table_privs_rpt : 
           report on table privileges in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>    -rep_database
           <<GRANTEE>>        -rep_grantee
           <<GRANTOR>>        -rep_grantor
           <<PRIVILEGE>>      -rep_privilege
           <<OWNER>>          -rep_schema
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate
			$columnFormat

			clear breaks
			set linesize 120
      	set pagesize <<PAGESIZE>>
			set tab off

			ttitle 'PDBAREP Table Privileges report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			break on cinstance skip page -
				on grantee skip 1 -
				on table_name skip 1 -
				on privilege skip 1

			select
				s.global_name cinstance
				, t.grantee
				, t.table_name
				, t.privilege
				, t.owner
				, t.grantor
				, t.grantable
				, s.snap_date
			from pdba_tab_privs t, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.grantee like '<<GRANTEE>>'
			and t.grantor like '<<GRANTOR>>'
			and t.privilege like '<<PRIVILEGE>>'
			and t.owner like '<<OWNER>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = t.snap_date_pk
			order by global_name, grantee, table_name, privilege, snap_date;


		}

	},

	sys_privs_rpt => {
	
		description => qq { 
         sys_privs_rpt : 
           report on system privileges in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>    -rep_database
           <<GRANTEE>>        -rep_grantee
           <<PRIVILEGE>>      -rep_privilege
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate
			$columnFormat

			col privilege format a40 head 'PRIVILEGE'

			clear breaks
			set linesize 100
      	set pagesize <<PAGESIZE>>
			set tab off

			ttitle 'PDBAREP System Privileges report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			break on cinstance skip page -
				on grantee skip 1 -
				on privilege skip 1

			select
				s.global_name cinstance
				, p.grantee
				, p.privilege
				, p.admin_option
				, s.snap_date
			from pdba_sys_privs p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and p.grantee like '<<GRANTEE>>'
			and p.privilege like '<<PRIVILEGE>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = p.snap_date_pk
			order by global_name, grantee, privilege, snap_date;

		}

	},

	parameter_rpt => {
	
		description => qq { 
         parameter_rpt : 
           report on database initialization parameters in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>    -rep_database
           <<PARM_NAME>>      -rep_parm_name
           <<PARM_VALUE>>     -rep_parm_value
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate
			$columnFormat

			col privilege format a40 head 'PRIVILEGE'

			clear breaks
			set linesize 100
      	set pagesize <<PAGESIZE>>
			set tab off

			ttitle 'PDBAREP Database Parameters report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			break on cinstance skip page -
				on parm_name skip 1 -
				on parm_description skip 1

			set line 130

			select
				s.global_name cinstance
				, p.name parm_name
				, p.description parm_description
				, p.value parm_value
				, s.snap_date
				, decode(nvl(p.isdefault,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isdefault,'F'),1,1)) isdefault
				, decode(nvl(p.isses_modifiable,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isses_modifiable,'F'),1,1)) isses_modifiable
				, decode(nvl(p.issys_modifiable,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.issys_modifiable,'F'),1,1)) issys_modifiable
				, decode(nvl(p.ismodified,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.ismodified,'F'),1,1)) ismodified
				, decode(nvl(p.isadjusted,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isadjusted,'F'),1,1)) isadjusted
			from pdba_parameters p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and p.name like '<<PARM_NAME>>'
			and p.value like '<<PARM_VALUE>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = p.snap_date_pk
			order by global_name, name, snap_date;

		}

	},

	sequence_rpt => {
	
		description => qq { 
         sequence_rpt : 
           report on sequences in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>    -rep_database
           <<OWNER>>          -rep_schema
           <<SEQUENCE_NAME>>  -rep_sequence_name
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate
			$columnFormat

			col privilege format a40 head 'PRIVILEGE'

			clear breaks
			set linesize 130
      	set pagesize <<PAGESIZE>>
			set tab off

			ttitle 'PDBAREP Sequences report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			break on cinstance skip page -
				on sequence_owner skip 1 -
				on sequence_name skip 1

			select
				s.global_name cinstance
				, q.sequence_owner
				, q.sequence_name
				, q. min_value
				, q.max_value
				, q.increment_by
				, q.cycle_flag
				, q.order_flag
				, q.cache_size
				, q.last_number
				, s.snap_date
			from pdba_sequences q, pdba_snap_dates s
			where  s.global_name like '<<GLOBAL_NAME>>'
			and q.sequence_owner like '<<OWNER>>'
			and q.sequence_name like '<<SEQUENCE_NAME>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = q.snap_date_pk
			order by global_name, sequence_owner, sequence_name, snap_date;

		}

	},

	tablespace_rpt => {
	
		description => qq { 
         tablespace_rpt : 
           report on tablespaces in the repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>     -rep_database
           <<TABLESPACE_NAME>> -rep_schema
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate
			$columnFormat

			col privilege format a40 head 'PRIVILEGE'

			clear breaks
			set linesize 150
      	set pagesize <<PAGESIZE>>
			set tab off

			ttitle 'PDBAREP Tablespaces report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			break on cinstance skip page -
				on tablespace_name skip 1

			select
				s.global_name cinstance
				, t.tablespace_name
				, t.contents tablespace_contents
				, t.status tablespace_status
				, t.logging tablespace_logging
				, decode(sign(t.initial_extent - 1048576)
					, 1, to_char(t.initial_extent / 1048576) || 'M'
					, to_char(t.initial_extent / 1024 ) || 'K'
				) initial_extent
				, decode(sign(t.next_extent - 1048576)
					, 1, to_char(t.next_extent / 1048576) || 'M'
					, to_char(t.next_extent / 1024 ) || 'K'
				) next_extent
				, t.pct_increase
				, t.min_extents
				, t.max_extents
				, s.snap_date
			from pdba_tablespaces t, pdba_snap_dates s
			where  s.global_name like '<<GLOBAL_NAME>>'
			and t.tablespace_name like '<<TABLESPACE_NAME>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = t.snap_date_pk
			order by global_name, tablespace_name, snap_date;

		}

	},

	user_rpt => {
	
		description => qq {
         user_rpt : 
           report on users in the repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>     -rep_database
           <<USERNAME>>        -rep_username
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate
			$columnFormat

			col privilege format a40 head 'PRIVILEGE'

			clear breaks
			set linesize 150
      	set pagesize <<PAGESIZE>>
			set tab off

			ttitle 'PDBAREP Users report for ' RIGHT 'Page: ' SQL.PNO skip uinstance skip 2

			break on cinstance skip page -
				on username skip 1

			select
				s.global_name cinstance
				, u.username
				--, u.user_id
				--, u.password
				, u.account_status
				, to_char(u.created,'mm/dd/yyyy') username_created
				, u.default_tablespace
				, u.temporary_tablespace
				--, to_char(u.expiry_date,'mm/dd/yyyy') expiry_date
				--, substr(u.external_name,1,15) external_name
				--, to_char(u.lock_date,'mm/dd/yyyy') lock_date
				, u.profile
				, s.snap_date
			from pdba_users u, pdba_snap_dates s
			where  s.global_name like '<<GLOBAL_NAME>>'
			and u.username like '<<USERNAME>>'
			-- here is how to get a range of dates
			and s.pk between <<START_DATE_PK>> and <<END_DATE_PK>>
			and s.pk = u.snap_date_pk
			order by global_name, username, snap_date;

		}

	},

	parameter_diff_rpt => {
	
		description => qq { 
         parameter_diff_rpt : 
           report on database initialization parameter differences in repository
           may be delimited by a date range.  
           if dates not supplied, the oldest and newest dates
           from the repository will be used

           may be limited by the following tags:

           <<GLOBAL_NAME>>    -rep_database
           <<START_DATE_PK>>  -rep_start_date
           <<END_DATE_PK>>    -rep_end_date
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate
			$sysdate
			$columnFormat

			col privilege format a40 head 'PRIVILEGE'

			clear breaks
      	set pagesize <<PAGESIZE>>
			set tab off

			ttitle 'PDBAREP Parameter Differences report ' RIGHT 'Page: ' SQL.PNO -
				skip 'as of <<END_DATE>> compared to <<START_DATE>>' -
				right uinstance '  ' usysdate skip 2

			break on cinstance skip page -
				on parm_name skip 1 -
				on parm_description skip 1

			set line 110

			select
				s.global_name cinstance
				, p.name parm_name
				, p.description parm_description
				, p.value parm_value
				, decode(nvl(p.isdefault,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isdefault,'F'),1,1)) isdefault
				, decode(nvl(p.isses_modifiable,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isses_modifiable,'F'),1,1)) isses_modifiable
				, decode(nvl(p.issys_modifiable,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.issys_modifiable,'F'),1,1)) issys_modifiable
				, decode(nvl(p.ismodified,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.ismodified,'F'),1,1)) ismodified
				, decode(nvl(p.isadjusted,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isadjusted,'F'),1,1)) isadjusted
			from pdba_parameters p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			-- here is how to get a range of dates
			and s.pk = <<END_DATE_PK>>
			and s.pk = p.snap_date_pk
			minus
			select
				s.global_name cinstance
				, p.name parm_name
				, p.description parm_description
				, p.value parm_value
				, decode(nvl(p.isdefault,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isdefault,'F'),1,1)) isdefault
				, decode(nvl(p.isses_modifiable,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isses_modifiable,'F'),1,1)) isses_modifiable
				, decode(nvl(p.issys_modifiable,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.issys_modifiable,'F'),1,1)) issys_modifiable
				, decode(nvl(p.ismodified,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.ismodified,'F'),1,1)) ismodified
				, decode(nvl(p.isadjusted,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isadjusted,'F'),1,1)) isadjusted
			from pdba_parameters p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			-- here is how to get a range of dates
			and s.pk = <<START_DATE_PK>>
			and s.pk = p.snap_date_pk
			order by 1,2;

			ttitle 'PDBAREP Parameter Differences report ' RIGHT 'Page: ' SQL.PNO -
				skip 'as of <<START_DATE>> compared to <<END_DATE>>' -
				right uinstance '  ' usysdate skip 2

			select
				s.global_name cinstance
				, p.name parm_name
				, p.description parm_description
				, p.value parm_value
				, decode(nvl(p.isdefault,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isdefault,'F'),1,1)) isdefault
				, decode(nvl(p.isses_modifiable,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isses_modifiable,'F'),1,1)) isses_modifiable
				, decode(nvl(p.issys_modifiable,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.issys_modifiable,'F'),1,1)) issys_modifiable
				, decode(nvl(p.ismodified,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.ismodified,'F'),1,1)) ismodified
				, decode(nvl(p.isadjusted,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isadjusted,'F'),1,1)) isadjusted
			from pdba_parameters p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			-- here is how to get a range of dates
			and s.pk = <<START_DATE_PK>>
			and s.pk = p.snap_date_pk
			minus
			select
				s.global_name cinstance
				, p.name parm_name
				, p.description parm_description
				, p.value parm_value
				, decode(nvl(p.isdefault,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isdefault,'F'),1,1)) isdefault
				, decode(nvl(p.isses_modifiable,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isses_modifiable,'F'),1,1)) isses_modifiable
				, decode(nvl(p.issys_modifiable,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.issys_modifiable,'F'),1,1)) issys_modifiable
				, decode(nvl(p.ismodified,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.ismodified,'F'),1,1)) ismodified
				, decode(nvl(p.isadjusted,'FALSE'),'FALSE','N','TRUE','Y', substr(nvl(p.isadjusted,'F'),1,1)) isadjusted
			from pdba_parameters p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			-- here is how to get a range of dates
			and s.pk = <<END_DATE_PK>>
			and s.pk = p.snap_date_pk
			order by 1,2;

		}

	},

	column_diff_rpt => {
	
		description => qq { 
         column_diff_rpt : 
           report on differences in table columns in repository

           may be delimited by a date range.  
           if dates not supplied, the oldest and newest dates
           from the repository will be used

           may be limited by the following tags:

           <<GLOBAL_NAME>>   -rep_database
           <<OWNER>>         -rep_schema
           <<TABLE_NAME>>    -rep_table_name
           <<START_DATE_PK>> -rep_start_date
           <<END_DATE_PK>>   -rep_end_date
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate	
			$sysdate

			clear breaks
			set linesize 120
      	set pagesize <<PAGESIZE>>

			break on cinstance skip page -
				on owner skip 1 -
				on table_name skip 1 -
				on column_name skip 1

			$columnFormat

			ttitle 'PDBAREP Table Column Differences report ' RIGHT 'Page: ' SQL.PNO -
				skip 'as of <<END_DATE>> compared to <<START_DATE>>' -
				right uinstance '  ' usysdate skip 2

			set feed on term on
			set tab off

         select
				s.global_name cinstance
				, t.owner
				, t.table_name
				, t.column_name
				, t.column_id
				, t.data_type
				, t.data_length
				, t.data_precision
				, t.data_scale
				, t.nullable
         from pdba_snap_dates s, pdba_tab_columns t
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.owner like '<<OWNER>>'
			and t.table_name like '<<TABLE_NAME>>'
			-- here is how to get a range of dates
			and s.pk = <<END_DATE_PK>>
         and s.pk = t.snap_date_pk
			minus
         select
				s.global_name cinstance
				, t.owner
				, t.table_name
				, t.column_name
				, t.column_id
				, t.data_type
				, t.data_length
				, t.data_precision
				, t.data_scale
				, t.nullable
         from pdba_snap_dates s, pdba_tab_columns t
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.owner like '<<OWNER>>'
			and t.table_name like '<<TABLE_NAME>>'
			-- here is how to get a range of dates
			and s.pk = <<START_DATE_PK>>
         and s.pk = t.snap_date_pk
         order by 1,2,3,4;

			ttitle 'PDBAREP Table Column Differences report ' RIGHT 'Page: ' SQL.PNO -
				skip 'as of <<START_DATE>> compared to <<END_DATE>>' -
				right uinstance '  ' usysdate skip 2

			set feed on term on
			set tab off

         select
				s.global_name cinstance
				, t.owner
				, t.table_name
				, t.column_name
				, t.column_id
				, t.data_type
				, t.data_length
				, t.data_precision
				, t.data_scale
				, t.nullable
         from pdba_snap_dates s, pdba_tab_columns t
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.owner like '<<OWNER>>'
			and t.table_name like '<<TABLE_NAME>>'
			-- here is how to get a range of dates
			and s.pk = <<START_DATE_PK>>
         and s.pk = t.snap_date_pk
			minus
         select
				s.global_name cinstance
				, t.owner
				, t.table_name
				, t.column_name
				, t.column_id
				, t.data_type
				, t.data_length
				, t.data_precision
				, t.data_scale
				, t.nullable
         from pdba_snap_dates s, pdba_tab_columns t
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.owner like '<<OWNER>>'
			and t.table_name like '<<TABLE_NAME>>'
			-- here is how to get a range of dates
			and s.pk = <<END_DATE_PK>>
         and s.pk = t.snap_date_pk
         order by 1,2,3,4;

		}

	},

	index_column_diff_rpt => {
	
		description => qq { 
         index_column_diff_rpt : 
           report on differences in index columns in repository

           may be delimited by a date range.  
           if dates not supplied, the oldest and newest dates
           from the repository will be used

           may be limited by the following tags:

           <<GLOBAL_NAME>>   -rep_database
           <<OWNER>>         -rep_schema
           <<TABLE_NAME>>    -rep_table_name
           <<START_DATE_PK>> -rep_start_date
           <<END_DATE_PK>>   -rep_end_date
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate	
			$sysdate

			clear breaks
			set linesize 120
      	set pagesize <<PAGESIZE>>

			break on cinstance skip page -
				on owner skip 1 -
				on table_name skip 1 -
				on column_name skip 1

			$columnFormat

			ttitle 'PDBAREP Index Column Differences report ' RIGHT 'Page: ' SQL.PNO -
				skip 'as of <<END_DATE>> compared to <<START_DATE>>' -
				right uinstance '  ' usysdate skip 2

			set feed on term on
			set tab off

         select
            s.global_name cinstance
            , t.table_owner
            , t.table_name
            , t.index_name
            , t.index_owner
            , t.column_name
				, t.column_position
				, t.column_length
         from pdba_snap_dates s, pdba_ind_columns t
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.table_owner like '<<OWNER>>'
			and t.table_name like '<<TABLE_NAME>>'
			and t.index_name like '<<INDEX_NAME>>'
			and s.pk = <<END_DATE_PK>>
         and s.pk = t.snap_date_pk
			minus
         select
            s.global_name cinstance
            , t.table_owner
            , t.table_name
            , t.index_name
            , t.index_owner
            , t.column_name
				, t.column_position
				, t.column_length
         from pdba_snap_dates s, pdba_ind_columns t
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.table_owner like '<<OWNER>>'
			and t.table_name like '<<TABLE_NAME>>'
			and t.index_name like '<<INDEX_NAME>>'
			-- here is how to get a range of dates
			and s.pk = <<START_DATE_PK>>
         and s.pk = t.snap_date_pk
			order by 1,2,3,4,6;


			ttitle 'PDBAREP Index Column Differences report ' RIGHT 'Page: ' SQL.PNO -
				skip 'as of <<START_DATE>> compared to <<END_DATE>>' -
				right uinstance '  ' usysdate skip 2

         select
            s.global_name cinstance
            , t.table_owner
            , t.table_name
            , t.index_name
            , t.index_owner
            , t.column_name
				, t.column_position
				, t.column_length
         from pdba_snap_dates s, pdba_ind_columns t
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.table_owner like '<<OWNER>>'
			and t.table_name like '<<TABLE_NAME>>'
			and t.index_name like '<<INDEX_NAME>>'
			and s.pk = <<START_DATE_PK>>
         and s.pk = t.snap_date_pk
			minus
         select
            s.global_name cinstance
            , t.table_owner
            , t.table_name
            , t.index_name
            , t.index_owner
            , t.column_name
				, t.column_position
				, t.column_length
         from pdba_snap_dates s, pdba_ind_columns t
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.table_owner like '<<OWNER>>'
			and t.table_name like '<<TABLE_NAME>>'
			and t.index_name like '<<INDEX_NAME>>'
			and s.pk = <<END_DATE_PK>>
         and s.pk = t.snap_date_pk
			order by 1,2,3,4,6;

		}

	},

	table_privs_diff_rpt => {
	
		description => qq { 
         table_privs_diff_rpt : 
           report on differences in table privileges in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>    -rep_database
           <<GRANTEE>>        -rep_grantee
           <<GRANTOR>>        -rep_grantor
           <<PRIVILEGE>>      -rep_privilege
           <<OWNER>>          -rep_schema
           <<START_DATE_PK>>  -rep_start_date
           <<END_DATE_PK>>    -rep_end_date
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate
			$sysdate
			$columnFormat

			clear breaks
			set linesize 90
      	set pagesize <<PAGESIZE>>
			set tab off

			ttitle 'PDBAREP Table Privileges Differences report ' RIGHT 'Page: ' SQL.PNO -
				skip 'as of <<END_DATE>> compared to <<START_DATE>>' -
				right uinstance '  ' usysdate skip 2

			break on cinstance skip page -
				on grantee skip 1 -
				on table_name skip 1 -
				on privilege skip 1

			select
				s.global_name cinstance
				, t.grantee
				, t.table_name
				, t.privilege
				, t.owner
				, t.grantor
				, t.grantable
			from pdba_tab_privs t, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.grantee like '<<GRANTEE>>'
			and t.grantor like '<<GRANTOR>>'
			and t.privilege like '<<PRIVILEGE>>'
			and t.owner like '<<OWNER>>'
			and s.pk = <<END_DATE_PK>>
			and s.pk = t.snap_date_pk
			minus
			select
				s.global_name cinstance
				, t.grantee
				, t.table_name
				, t.privilege
				, t.owner
				, t.grantor
				, t.grantable
			from pdba_tab_privs t, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.grantee like '<<GRANTEE>>'
			and t.grantor like '<<GRANTOR>>'
			and t.privilege like '<<PRIVILEGE>>'
			and t.owner like '<<OWNER>>'
			and s.pk = <<START_DATE_PK>>
			and s.pk = t.snap_date_pk
			order by 1,2,3,4;

			ttitle 'PDBAREP Table Privileges Differences report ' RIGHT 'Page: ' SQL.PNO -
				skip 'as of <<START_DATE>> compared to <<END_DATE>>' -
				right uinstance '  ' usysdate skip 2

			select
				s.global_name cinstance
				, t.grantee
				, t.table_name
				, t.privilege
				, t.owner
				, t.grantor
				, t.grantable
			from pdba_tab_privs t, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.grantee like '<<GRANTEE>>'
			and t.grantor like '<<GRANTOR>>'
			and t.privilege like '<<PRIVILEGE>>'
			and t.owner like '<<OWNER>>'
			and s.pk = <<START_DATE_PK>>
			and s.pk = t.snap_date_pk
			minus
			select
				s.global_name cinstance
				, t.grantee
				, t.table_name
				, t.privilege
				, t.owner
				, t.grantor
				, t.grantable
			from pdba_tab_privs t, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and t.grantee like '<<GRANTEE>>'
			and t.grantor like '<<GRANTOR>>'
			and t.privilege like '<<PRIVILEGE>>'
			and t.owner like '<<OWNER>>'
			and s.pk = <<END_DATE_PK>>
			and s.pk = t.snap_date_pk
			order by 1,2,3,4;

		}

	},

	role_privs_diff_rpt => {
	
		description => qq { 
         role_privs_diff_rpt : 
           report on differences in role privileges in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>    -rep_database
           <<GRANTEE>>        -rep_grantee
           <<START_DATE_PK>>  -rep_start_date
           <<END_DATE_PK>>    -rep_end_date
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate
			$sysdate
			$columnFormat

			clear breaks
			set linesize 100
      	set pagesize <<PAGESIZE>>
			set tab off

			ttitle 'PDBAREP Role Privileges Differences report ' RIGHT 'Page: ' SQL.PNO -
				skip 'as of <<END_DATE>> compared to <<START_DATE>>' -
				right uinstance '  ' usysdate skip 2

			break on cinstance skip page -
				on grantee skip 1 -
				on granted_role skip 1

			select 
				s.global_name cinstance
				, p.grantee
				, p.granted_role
				, p.admin_option
				, p.default_role
			from pdba_role_privs p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and p.grantee like '<<GRANTEE>>'
			and s.pk = <<END_DATE_PK>>
			and s.pk = p.snap_date_pk
			minus
			select 
				s.global_name cinstance
				, p.grantee
				, p.granted_role
				, p.admin_option
				, p.default_role
			from pdba_role_privs p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and p.grantee like '<<GRANTEE>>'
			and s.pk = <<START_DATE_PK>>
			and s.pk = p.snap_date_pk
			order by 1,2,3;

			ttitle 'PDBAREP Role Privileges Differences report ' RIGHT 'Page: ' SQL.PNO -
				skip 'as of <<START_DATE>> compared to <<END_DATE>>' -
				right uinstance '  ' usysdate skip 2

			select 
				s.global_name cinstance
				, p.grantee
				, p.granted_role
				, p.admin_option
				, p.default_role
			from pdba_role_privs p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and p.grantee like '<<GRANTEE>>'
			and s.pk = <<START_DATE_PK>>
			and s.pk = p.snap_date_pk
			minus
			select 
				s.global_name cinstance
				, p.grantee
				, p.granted_role
				, p.admin_option
				, p.default_role
			from pdba_role_privs p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and p.grantee like '<<GRANTEE>>'
			and s.pk = <<END_DATE_PK>>
			and s.pk = p.snap_date_pk
			order by 1,2,3;
		}

	},

	sys_privs_diff_rpt => {
	
		description => qq { 
         sys_privs_diff_rpt : 
           report on differences in system privileges in repository
           may be limited by the following tags:

           <<GLOBAL_NAME>>    -rep_database
           <<GRANTEE>>        -rep_grantee
           <<PRIVILEGE>>      -rep_privilege
           <<START_DATE_PK>>  -rep_start_date
           <<END_DATE_PK>>    -rep_end_date
			
		},

		script => qq { <<LOGIN_USERNAME>>/<<LOGIN_PASSWORD>>\@<<LOGIN_DATABASE>>

			$nlsDate
			$sysdate
			$columnFormat

			col privilege format a40 head 'PRIVILEGE'

			clear breaks
			set linesize 80
      	set pagesize <<PAGESIZE>>
			set tab off

			ttitle 'PDBAREP System Privileges Differences report ' RIGHT 'Page: ' SQL.PNO -
				skip 'as of <<END_DATE>> compared to <<START_DATE>>' -
				right uinstance '  ' usysdate skip 2

			break on cinstance skip page -
				on grantee skip 1 -
				on privilege skip 1

			select
				s.global_name cinstance
				, p.grantee
				, p.privilege
				, p.admin_option
			from pdba_sys_privs p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and p.grantee like '<<GRANTEE>>'
			and p.privilege like '<<PRIVILEGE>>'
			and s.pk = <<END_DATE_PK>>
			and s.pk = p.snap_date_pk
			minus
			select
				s.global_name cinstance
				, p.grantee
				, p.privilege
				, p.admin_option
			from pdba_sys_privs p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and p.grantee like '<<GRANTEE>>'
			and p.privilege like '<<PRIVILEGE>>'
			and s.pk = <<START_DATE_PK>>
			and s.pk = p.snap_date_pk
			order by 1,2,3;

			ttitle 'PDBAREP System Privileges Differences report ' RIGHT 'Page: ' SQL.PNO -
				skip 'as of <<START_DATE>> compared to <<END_DATE>>' -
				right uinstance '  ' usysdate skip 2

			select
				s.global_name cinstance
				, p.grantee
				, p.privilege
				, p.admin_option
			from pdba_sys_privs p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and p.grantee like '<<GRANTEE>>'
			and p.privilege like '<<PRIVILEGE>>'
			and s.pk = <<START_DATE_PK>>
			and s.pk = p.snap_date_pk
			minus
			select
				s.global_name cinstance
				, p.grantee
				, p.privilege
				, p.admin_option
			from pdba_sys_privs p, pdba_snap_dates s
			where s.global_name like '<<GLOBAL_NAME>>'
			and p.grantee like '<<GRANTEE>>'
			and p.privilege like '<<PRIVILEGE>>'
			and s.pk = <<END_DATE_PK>>
			and s.pk = p.snap_date_pk
			order by 1,2,3;

		}

	},

);


1;


