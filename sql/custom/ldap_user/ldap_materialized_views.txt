-- every 5 min (1440 minutes in a day)
-- next(sysdate+5/1440)
-- every 1 min
-- next(sysdate+1/1440)

drop MATERIALIZED view mv_ad_orgunits;
create MATERIALIZED view mv_ad_orgunits refresh complete start with (sysdate) next (sysdate+60/1440) as
select * from table(ABRLDAP.GETORGUNITS) order by id;


drop MATERIALIZED view mv_ad_users;
create MATERIALIZED view mv_ad_users refresh complete start with (sysdate) next (sysdate+60/1440) as
select row_number() over ( order by dn) as id,SERVER, BASE, DN, EMPLOYEE_ID, FIRST_NAME, LAST_NAME, COMMON_NAME, SAM, EMAIL, PHONE, MANAGER, COMPANY, DEPARTMENT, LOCATION, LAST_ACTIVE, DISABLED from (
select SERVER, BASE, DN, EMPLOYEE_ID, FIRST_NAME, LAST_NAME, COMMON_NAME, SAM, EMAIL, PHONE, MANAGER, COMPANY, DEPARTMENT, LOCATION, LAST_ACTIVE, DISABLED from (
select *, row_number() over (partition by DN order by id) AS rn from table(ABRLDAP.GETUSERSBYOU)
) where rn=1
);
select count(*) from mv_ad_users;

select * from mv_ad_orgunits;
drop MATERIALIZED view mv_ad_groups;
create MATERIALIZED view mv_ad_groups refresh complete start with (sysdate) next (sysdate+60/1440) as
select row_number() over ( order by dn) as id,dn,name from (
select id,dn,name from (
select id,dn ,name, row_number() over (partition by DN order by id) AS rn from table(ABRLDAP.GETGROUPSBYOU)
) where rn=1
);
select * from mv_ad_groups;



EXCEPTION
WHEN OTHERS THEN
     dbms_output.put_line('Others :'||SQLERRM);
     dbms_output.put_line(dbms_utility.Format_Error_Stack || dbms_utility.Format_error_backtrace ||dbms_utility.Format_call_Stack);
END;


(&(objectclass=user)(!(objectclass=computer)))
ID, SERVER, BASE, DN, EMPLOYEE_ID, FIRST_NAME, LAST_NAME, COMMON_NAME, SAM, EMAIL, PHONE, MANAGER, COMPANY, DEPARTMENT, LOCATION, LAST_ACTIVE, DISABLED
